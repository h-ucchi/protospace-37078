<main class="main">
  <div class="inner">
    <div class="prototype__wrapper">
      <p class="prototype__hedding">
        <%= "プロトタイプのタイトル"%>
      </p>
      <% if user_signed_in? && current_user.id == @prototype.user_id %>
      <%# プロトタイプの投稿者とログインしているユーザーが同じであれば以下を表示する %>
        <%= link_to "by #{@prototype.user.name}", prototype_path(prototype.user_id), class: :prototype__user %>
          <div class="prototype__manage">
            <%= link_to "編集する", edit_prototype_path(@prototype.id), class: :prototype__btn %>
            <%= link_to "削除する", prototype_path(@prototype.id), method: :delete, class: :prototype__btn %> <%#destoroyではなくdelete。rails routesの中にあるverbを記載する%>
          </div>
      <% end %>
      <%# // プロトタイプの投稿者とログインしているユーザーが同じであれば上記を表示する %>
      <div class="prototype__image">
        <%= image_tag(@prototype.image, class: :card__img ) %>
      </div>
      <div class="prototype__body">
        <div class="prototype__detail">
          <p class="detail__title">キャッチコピー</p>
          <p class="detail__message">
            <%= @prototype.catch_copy %>
          </p>
        </div>
        <div class="prototype__detail">
          <p class="detail__title">コンセプト</p>
          <p class="detail__message">
            <%= @prototype.concept %>
          </p>
        </div>
      </div>
      <div class="prototype__comments">
        <%# ログインしているユーザーには以下のコメント投稿フォームを表示する %>
        <% if user_signed_in? %>
          <%= form_with model: [@prototype, @comment],local: true do |f|%>
            <div class="field">
              <%= f.label :content, "コメント" %><br /> <%#label->入力する場所の項目名を表す %>
              <%= f.text_field :content, id:"comment_content" %>
            </div>
            <div class="actions">
              <%= f.submit "送信する", class: :form__btn  %>
            </div>
          <% end %>
        <% end %>
        <%# // ログインしているユーザーには上記を表示する %>
        <ul class="comments_lists">
          <%# 投稿に紐づくコメントを一覧する処理を記述する %>
            <% @comments.each do |comment| %> <%# <%= " コメントのテキスト(コメントが複数あるのでeach文を使って実装する必要あり) "%>
            <%# liの黒ポチも繰り返し処理したいので、each文はliの上に書く%>
            <li class="comments_list">
              <%= comment.content %>
              <%# <%= link_to "（ ユーザー名 ）", root_path, class: :comment_user %>
              <%= link_to comment.user.name, user_path(comment.user.id), class: :comment_user %> <%# コメントに紐づくuserのnameを表示し、userのidに遷移するようにする%>
              <%# @userはprototypesのshowアクションで定義されていないから使えない %>
              <%# commentは49行目のcomment、commentは便宜的に設けられた変数なので、@commentにする必要はない %>
            </li>
            <% end %>
          <%# // 投稿に紐づくコメントを一覧する処理を記述する %>
        </ul>
      </div>
    </div>
  </div>
</main>
[{id:1,coment:"ohayo"},{id:2,coment:"konbanha"}]